package com.github.medavox.ipa_transcribers.asian_unique

import com.github.medavox.ipa_transcribers.CompletionStatus
import com.github.medavox.ipa_transcribers.Rule
import com.github.medavox.ipa_transcribers.RuleBasedTranscriber

/**We can't process Japanese's primary writing system, Kanji, with a rule-based transcriber.
 * But we can process its simpler supplementary writing systems, Katakana and Hiragana.*/
object JapaneseRuleBasedKatakanaHiraganaOnly:RuleBasedTranscriber() {
    override val completionStatus: CompletionStatus = CompletionStatus.UNSTARTED
    private val rules:List<Rule> = listOf(
        //katakana
        Rule("ア", "a"),
        Rule("イ", "i"),
        Rule("ウ", "ɯ"),
        Rule("エ", "e"),
        Rule("オ", "o"),
        Rule("カ", "ka"),
        Rule("キ", "ki"),
        Rule("ク", "kɯ"),
        Rule("ケ", "ke"),
        Rule("コ", "ko"),
        Rule("キャ", "kʲa"),
        Rule("キュ", "kʲɯ"),
        Rule("キョ", "kʲo"),
        Rule("サ", "sa"),
        Rule("シ", "ɕi"),
        Rule("ス", "sɯ"),
        Rule("セ", "se"),
        Rule("ソ", "so"),
        Rule("シャ", "ɕa"),
        Rule("シュ", "ɕɯ"),
        Rule("ショ", "ɕo"),
        Rule("タ", "ta"),
        Rule("チ", "t͡ɕi"),
        Rule("ツ", "t͡sɯ"),
        Rule("テ", "te"),
        Rule("ト", "to"),
        Rule("チャ", "t͡ɕa"),
        Rule("チュ", "t͡ɕɯ"),
        Rule("チョ", "t͡ɕo"),
        Rule("ナ", "na"),
        Rule("ニ", "ɲi"),
        Rule("ヌ", "nɯ"),
        Rule("ネ", "ne"),
        Rule("ノ", "no"),
        Rule("ニャ", "ɲa"),
        Rule("ニュ", "ɲɯ"),
        Rule("ニョ", "ɲo"),
        Rule("ハ", "ha"),
        Rule("ヒ", "çi"),
        Rule("フ", "ɸɯ"),
        Rule("ヘ", "he"),
        Rule("ホ", "ho"),
        Rule("ヒャ", "ça"),
        Rule("ヒュ", "çɯ"),
        Rule("ヒョ", "ço"),
        Rule("マ", "ma"),
        Rule("ミ", "mi"),
        Rule("ム", "mɯ"),
        Rule("メ", "me"),
        Rule("モ", "mo"),
        Rule("ミャ", "mʲa"),
        Rule("ミュ", "mʲɯ"),
        Rule("ミョ", "mʲo"),
        Rule("ヤ", "ja"),
        Rule("ユ", "jɯ"),
        Rule("ヨ", "jo"),
        Rule("ラ", "ɾa"),
        Rule("リ", "ɾi"),
        Rule("ル", "ɾɯ"),
        Rule("レ", "ɾe"),
        Rule("ロ", "ɾo"),
        Rule("リャ", "ɾʲa"),
        Rule("リュ", "ɾʲɯ"),
        Rule("リョ", "ɾʲo"),
        Rule("ワ", "ɰa"),
        Rule("ヰ", "i"),
        Rule("ヱ", "e"),
        Rule("ヲ", "o"),

        Rule("ギ", "ɡi"),
        Rule("グ", "ɡɯ"),
        Rule("ゲ", "ɡe"),
        Rule("ゴ", "ɡo"),
        Rule("ギャ", "ɡʲa"),
        Rule("ギュ", "ɡʲɯ"),
        Rule("ギョ", "ɡʲo"),
        Rule("ジ", "(d)ʑi"),
        Rule("ズ", "(d)zɯ"),
        Rule("ゼ", "ze"),
        Rule("ゾ", "zo"),
        Rule("ジャ", "(d)ʑa"),
        Rule("ジュ", "(d)ʑɯ"),
        Rule("ジョ", "(d)ʑo"),
        Rule("ヂ", "(d)ʑi"),
        Rule("ヅ", "(d)zɯ"),
        Rule("デ", "de"),
        Rule("ド", "do"),
        Rule("ヂャ", "(d)ʑa"),
        Rule("ヂュ", "(d)ʑɯ"),
        Rule("ヂョ", "(d)ʑo"),
        Rule("ビ", "bi"),
        Rule("ブ", "bɯ"),
        Rule("ベ", "be"),
        Rule("ボ", "bo"),
        Rule("ビャ", "bʲa"),
        Rule("ビュ", "bʲɯ"),
        Rule("ビョ", "bʲo"),
        Rule("ピ", "pi"),
        Rule("プ", "pɯ"),
        Rule("ペ", "pe"),
        Rule("ポ", "po"),
        Rule("ピャ", "pʲa"),
        Rule("ピュ", "pʲɯ"),
        Rule("ピョ", "pʲo"),


        )
    override fun transcribe(nativeText: String): String {
        return nativeText.processWithRules(rules, reportAndCopy)
    }
}